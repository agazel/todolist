{"ast":null,"code":"export default {\n  props: ['todo'],\n  data() {\n    return {\n      isEditing: false,\n      editText: this.todo.text\n    };\n  },\n  methods: {\n    deleteTodo() {\n      this.$emit('delete', this.todo.id);\n    },\n    editTodo() {\n      this.isEditing = true;\n    },\n    cancelEdit() {\n      this.isEditing = false;\n      this.editText = this.todo.text;\n    },\n    updateTodo() {\n      if (this.editText.trim() === '') return;\n      this.$emit('update-todo', this.todo.id, this.editText);\n      this.isEditing = false;\n    }\n  },\n  computed: {\n    statusClass() {\n      return {\n        'completed': this.todo.status === 'completed',\n        'ignored': this.todo.status === 'ignored'\n      };\n    }\n  }\n};","map":{"version":3,"names":["props","data","isEditing","editText","todo","text","methods","deleteTodo","$emit","id","editTodo","cancelEdit","updateTodo","trim","computed","statusClass","status"],"sources":["/Users/MacGazel/Desktop/todo-list/frontend/src/components/TodoItem.vue"],"sourcesContent":["<template>\n    <li :class=\"statusClass\">\n        <div v-if=\"isEditing\">\n            <input v-model=\"editText\" @keyup.enter=\"updateTodo\">\n            <button @click=\"updateTodo\">‚úîÔ∏è</button>\n            <button @click=\"cancelEdit\">‚ùå</button>\n        </div>\n        <div v-else>\n            <span>{{ todo.text }}</span>\n            <button @click=\"editTodo\">üîº</button>\n            <button @click=\"deleteTodo\">üóëÔ∏è</button>\n        </div>\n    </li>\n</template>\n\n<script>\nexport default {\n    props: ['todo'],\n    data() {\n        return {\n            isEditing: false,\n            editText: this.todo.text\n        };\n    },\n    methods: {\n        deleteTodo() {\n            this.$emit('delete', this.todo.id);\n        },\n        editTodo() {\n            this.isEditing = true;\n        },\n        cancelEdit() {\n            this.isEditing = false;\n            this.editText = this.todo.text;\n        },\n        updateTodo() {\n            if (this.editText.trim() === '') return;\n            this.$emit('update-todo', this.todo.id, this.editText);\n            this.isEditing = false;\n        }\n    },\n    computed: {\n        statusClass() {\n            return {\n                'completed': this.todo.status === 'completed',\n                'ignored': this.todo.status === 'ignored'\n            };\n        }\n    }\n}\n</script>\n\n<style scoped>\nli {\n    list-style: none;\n    margin: 5px 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\nbutton {\n    margin-left: 5px;\n    cursor: pointer;\n    border: none;\n    background: none;\n    font-size: 1.2em;\n}\nbutton:hover {\n    color: #007BFF;\n}\ninput {\n    flex: 1;\n    margin-right: 5px;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n}\n.completed {\n    background-color: green;\n    color: white;\n}\n.ignored {\n    background-color: red;\n    color: white;\n}\n</style>\n"],"mappings":"AAgBA,eAAe;EACXA,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,IAAI,CAACC,IAAI,CAACC;IACxB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACJ,IAAI,CAACK,EAAE,CAAC;IACtC,CAAC;IACDC,QAAQA,CAAA,EAAG;MACP,IAAI,CAACR,SAAQ,GAAI,IAAI;IACzB,CAAC;IACDS,UAAUA,CAAA,EAAG;MACT,IAAI,CAACT,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACC,QAAO,GAAI,IAAI,CAACC,IAAI,CAACC,IAAI;IAClC,CAAC;IACDO,UAAUA,CAAA,EAAG;MACT,IAAI,IAAI,CAACT,QAAQ,CAACU,IAAI,CAAC,MAAM,EAAE,EAAE;MACjC,IAAI,CAACL,KAAK,CAAC,aAAa,EAAE,IAAI,CAACJ,IAAI,CAACK,EAAE,EAAE,IAAI,CAACN,QAAQ,CAAC;MACtD,IAAI,CAACD,SAAQ,GAAI,KAAK;IAC1B;EACJ,CAAC;EACDY,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,OAAO;QACH,WAAW,EAAE,IAAI,CAACX,IAAI,CAACY,MAAK,KAAM,WAAW;QAC7C,SAAS,EAAE,IAAI,CAACZ,IAAI,CAACY,MAAK,KAAM;MACpC,CAAC;IACL;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}